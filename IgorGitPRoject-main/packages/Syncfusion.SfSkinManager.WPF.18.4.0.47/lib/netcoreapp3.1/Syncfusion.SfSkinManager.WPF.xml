<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfSkinManager.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfSkinManager.ColorHelper">
            <summary>
            Represents a class which helps in generating derivative colors based on factor and opacity
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.GetVariantBrush(System.Windows.Media.Brush,System.Double,System.Double)">
            <summary>
            Helper method to get variant brush based on provided factor applied to provided brush
            </summary>
            <param name="brush">Default brush value</param>
            <param name="factor">Factor to be applied on color value in default brush value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.GetVariantColor(System.Windows.Media.Color,System.Double,System.Double)">
            <summary>
            Helper method to get variant color based on provided factor applied to provided color
            </summary>
            <param name="color">Default color value</param>
            <param name="factor">Factor to apply on default color value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.HSLToRGB(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Helper method to convert HSL to RGB color value
            </summary>
            <param name="A">Alpha Value</param>
            <param name="H">Hue Value</param>
            <param name="S">Saturation Value</param>
            <param name="L">Lightness Value</param>
            <returns>System.Windows.Media.Color</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.HueToRGB(System.Single,System.Single,System.Single)">
            <summary>
            Helper method to convert hue to RGB values
            </summary>
            <param name="derivative1">First derivative value</param>
            <param name="derivative2">Second derivative value</param>
            <param name="hue">Hue factor</param>
            <returns>Float value</returns>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ResourceDictionaryProvider">
            <summary>
            Markup extension class to store common resource dictionary needed for themes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.Dispose">
            <summary>
            Helper method to dispose <see cref="T:Syncfusion.SfSkinManager.ResourceDictionaryProvider"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.GetResourceDictionary(System.String,System.String)">
            <summary>
            Helper method to get common/brush keys resource dictionary
            </summary>
            <param name="themeName">Theme name</param>
            <param name="dictionaryName">Dictionary name (Common/Brushes)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.UpdateCommonDictionary(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Helper method to update modified common/brush keys resource dictionary
            </summary>
            <param name="themeName">Theme name</param>
            <param name="dictionaryName">Dictionary name</param>
            <param name="keyValuePairs">List of updated key and values</param>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SkinHelper">
            <summary>
            Represents a class which returns theme resources from theme assembly for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>. Each theme assembly will have class derived from <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetDictonaries(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetDictionaries(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetStylesOfElement(System.Windows.DependencyObject)">
            <summary>
            Helper method to get theme name of particular control
            </summary>
            <param name="obj">element</param>
            <returns>theme name</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.SetStylesOnDialogWindow(System.Windows.Window,System.String)">
            <summary>
            Helper method to set styles for dialog window
            </summary>
            <param name="obj">Window instance</param>
            <param name="style">theme name</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.CopyStyle(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Copies style of one element to another.
            </summary>
            <param name="sourceElement">Source element whose style to be copied</param>
            <param name="targetElement">Target element where style to be applied.</param>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ThemeSettingsHelper">
            <summary>
            Represents a class which has various helper methods to update <see cref="!:Syncfusion.SfSkinManager.Theme.Settings"/> values in root theme resource dictionary.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.UpdateThemeSettings(System.String,System.Object)">
            <summary>
            Helper method to update theme settings for theme applied specific root element.
            </summary>
            <param name="themeSettings">ThemeSettings value</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetBrushSetting(System.Windows.ResourceDictionary,System.String,System.Object)">
            <summary>
            Helper method to set updated brush values in respective resource dictionary
            </summary>
            <param name="mergeddictionary">Resource dictionary</param>
            <param name="key">Resource key</param>
            <param name="value">Value to be updated</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetCommonSetting(System.Windows.ResourceDictionary,System.String,System.Object)">
            <summary>
            Helper method to set updated common key values in respective resource dictionary
            </summary>
            <param name="mergeddictionary">Resource dictionary</param>
            <param name="key">Resource key</param>
            <param name="value">Value to be updated</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetThemeSetting(System.Windows.ResourceDictionary,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Helper method to loop the provided resource dictionary containing Brushes.xaml/Common.xaml and replace the theme keys which matches with keys available in keyValuePairs list.  
            </summary>
            <param name="resourceDictionary">Resource Dictionary</param>
            <param name="keyValuePairs">Key Value pair list containing the theme settings property values</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.GetDerivationColor(System.Windows.Media.Brush,System.Double,System.Double)">
            <summary>
            Helper method to get derivation color
            </summary>
            <param name="brushValue">Base brush value</param>
            <param name="derivationValue">derivation</param>
            <param name="opacity">opacity</param>
            <returns>Brush value</returns>
        </member>
        <member name="T:Syncfusion.SfSkinManager.NamespaceDoc">
             <summary>
            Provides classes, interfaces and enumerators to manage themes for Syncfusion controls. 
             </summary>
             <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.VisualStyles">
            <summary>
            Specifies the visual style names for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>
            </summary>
            <remarks>
            Based on the <see cref="T:Syncfusion.SfSkinManager.VisualStyles"/>, <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will look for theme assembly. You can load custom theme assembly using <see cref="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterTheme(System.String,Syncfusion.SfSkinManager.SkinHelper)"/> method.
            </remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Default">
            <summary>
            <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> clears the applied themes and controls will appear in its default appearence.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Blend">
            <summary>
            Represents the Blend theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Blend.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Metro">
            <summary>
            Represents the Metro theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Blend.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Black">
            <summary>
            Represents the Office2010Black theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Black.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Blue">
            <summary>
            Represents the Office2010Blue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Blue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Silver">
            <summary>
            Represents the Office2010Silver theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Silver.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013DarkGray">
            <summary>
            Represents the Office2013DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013LightGray">
            <summary>
            Represents the Office2013LightGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013LightGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013White">
            <summary>
            Represents the Office2013White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.VisualStudio2013">
            <summary>
            Represents the VisualStudio2013 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.VisualStudio2013.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Lime">
            <summary>
            Represents the Lime theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Lime.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Saffron">
            <summary>
            Represents the Saffron theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Saffron.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office365">
            <summary>
            Represents the Office365 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office365.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016White">
            <summary>
            Represents the Office2016White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016DarkGray">
            <summary>
            Represents the Office2016DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016Colorful">
            <summary>
            Represents the Office2016Colorful theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016Colorful.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.VisualStudio2015">
            <summary>
            Represents the VisualStudio2015 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.VisualStudio2015.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.SystemTheme">
            <summary>
            Represents the SystemTheme theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.SystemTheme.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialLight">
            <summary>
            Represents the MaterialLight theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialLight.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialDark">
            <summary>
            Represents the MaterialDark theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialDark.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialLightBlue">
            <summary>
            Represents the MaterialLightBlue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialLightBlue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialDarkBlue">
            <summary>
            Represents the MaterialDarkBlue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialDarkBlue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019Colorful">
            <summary>
            Represents the Office2019Colorful theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019Colorful.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019Black">
            <summary>
            Represents the Office2019Black theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019Black.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019White">
            <summary>
            Represents the Office2019White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019DarkGray">
            <summary>
            Represents the Office2019DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019HighContrast">
            <summary>
            Represents the HighContrast theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019HighContrast.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019HighContrastWhite">
            <summary>
            Represents the HighContrast white theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019HighContrastWhite.WPF assembly.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SfSkinManager">
            <summary>
            Represents the class that manages themes for Syncfusion controls.
            </summary>
            <remarks>
            The Skin manager applies theme to all the controls in application in optimistic way. It iterates through controls in visual tree and add the corresponding theme resource dictionary to apply theme. 
            <para>For example, if you are applying MaterialLight theme, skin manager will load resources from "Syncfusion.Themes.MaterialLight.WPF.dll". Ensure you have added theme assembly as reference.</para>
            <para>It is recommended to apply theme before InitializeComponent for better performance.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterTheme(System.String,Syncfusion.SfSkinManager.SkinHelper)">
            <summary>
            Method to register theme name and its <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/>. 
            </summary>
            <param name="themeName">Theme name (visual style) </param>
            <param name="skinHelper">Instance of skin helper in theme assembly. </param>
            <returns>
            true, if the theme registered successfully. 
            false, if theme name already registered.
            </returns>
            <remarks>
            The <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> returns theme resource dictionary details to skin manager to apply theme.
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported themes and its settings</see>
            </remarks>
            <example>
            This example shows how to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            string style = "MaterialDark";
            SkinHelper styleInstance = null;
            var skinHelpterStr = "Syncfusion.Themes." + style + ".WPF." + style + "SkinHelper, Syncfusion.Themes." + style + ".WPF";
            Type skinHelpterType = Type.GetType(skinHelpterStr);
            if (skinHelpterType != null)
               styleInstance = Activator.CreateInstance(skinHelpterType) as SkinHelper;
            if (styleInstance != null)
            {
                SfSkinManager.RegisterTheme("CustomMaterialDark1", styleInstance);
            }
            MenuAdv menuAdv =  new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme() { ThemeName = "CustomMaterialDark1;MaterialDark" });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterThemeSettings(System.String,Syncfusion.SfSkinManager.IThemeSetting)">
            <summary>
            Helper method to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            </summary>
            <param name="themeName">Theme name (visual style)</param>
            <param name="themeSetting">Instance of ThemeSettings in theme assembly</param>
            <returns>
            <b>true</b>, if the theme registered successfully. 
            <b>false</b>, if theme name already registered.
            </returns>
            <remarks>
            The <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> returns theme resource dictionary details to skin manager to apply theme.
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported themes and its settings</see>
            </remarks>
            <example>
            This example shows how to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MaterialDarkThemeSettings materialDarkThemeSettings = new MaterialDarkThemeSettings();
            materialDarkThemeSettings.PrimaryBackground = new SolidColorBrush(Colors.Red);
            materialDarkThemeSettings.PrimaryForeground = new SolidColorBrush(Colors.Yellow);
            materialDarkThemeSettings.FontFamily = new FontFamily("Arial");
            materialDarkThemeSettings.BodyFontSize = 12;
            materialDarkThemeSettings.SubTitleFontSize = 14;
            string style = "MaterialDark";
            SfSkinManager.RegisterThemeSettings("MaterialDark", materialDarkThemeSettings);
            MenuAdv menuAdv =  new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme() { ThemeName = "MaterialDark" });
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication">
            <summary>
            Gets or sets whether to maintain theme resources in <see cref="P:System.Windows.Application.Resources"/> or resources of root element to which <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> attached property set. 
            </summary>
            <value>
            true, if you want to maintain theme resource in <see cref="P:System.Windows.Application.Resources"/>.
            false, the theme resources will be maintained in the <see cref="P:System.Windows.FrameworkElement.Resources"/> of root elelemt to which <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> attached property set.
            </value>
            <remarks>
            It is not recommended to change <see cref="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication"/> at runtime. Also, ensure to set <see cref="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication"/> before setting <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetVisualStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the visual style applied to particular element.
            </summary>
            <param name="obj">UI element</param>
            <returns>VisualStyles</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetVisualStyle(System.Windows.DependencyObject,Syncfusion.SfSkinManager.VisualStyles)">
            <summary>
            Sets the visual style to the element and its children.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty">
            <summary>
             Gets or sets a visual style of element where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> apply themes. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfSkinManager.Theme"/> of particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <param name="obj">The element whose <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be retrieved. </param>
            <returns>The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetTheme(System.Windows.DependencyObject,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Sets the <see cref="T:Syncfusion.SfSkinManager.Theme"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfSkinManager.Theme"/> The theme info. The default value is instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/> with <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> property value as <b>Default</b>.
            </value>
            <param name="obj">The element to which the <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be set. </param>
            <param name="value"> The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</param>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>
            <example>
            This example shows how to set default supported themes using <see cref="T:Syncfusion.SfSkinManager.Theme"/>.
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
            <syncfusion:Theme ThemeName="MaterialDark" x:Key="theme"/>
            </Window.Resources>
            <syncfusion:MenuAdv x:Name="menuAdv"                
            syncfusion:SfSkinManager.Theme="{StaticResource theme}"/>
            ]]>
            </code>
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MenuAdv menuAdv = new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme("MaterialDark"));
            ]]>
            </code>
            </example>
            <example>
            This example shows how to set custom theme name using <see cref="T:Syncfusion.SfSkinManager.Theme"/>.
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
            <syncfusion:Theme ThemeName="CustomTheme1;MaterialDark" x:Key="theme"/>
            </Window.Resources>
            <syncfusion:MenuAdv x:Name="menuAdv"                
            syncfusion:SfSkinManager.Theme="{StaticResource theme}"/>
            ]]>
            </code>
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MenuAdv menu =  new MenuAdv();
            SfSkinManager.SetTheme(menu, new Theme("CustomTheme1;MaterialDark"));
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SfSkinManager.ThemeProperty">
            <summary>
            Identifies the <see cref="T:Syncfusion.SfSkinManager.Theme" /> dependency attached property to get or set a theme name where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply themes for control and its child element in application.
            </summary>
            <remarks>
            The identifier for the <see cref="T:Syncfusion.SfSkinManager.Theme" /> dependency attached property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.OnVisualStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Applies the visual style to the control and its child element.
            </summary>
            <param name="obj">Dependency object</param>
            <param name="e">DependencyPropertyChangedEventArgs contains the theme that has to be applied.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.OnThemeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Applies the theme name to the control and its child element.
            </summary>
            <param name="obj">Dependency object</param>
            <param name="e">DependencyPropertyChangedEventArgs contains the theme that has to be applied.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetThemeName(System.Windows.DependencyObject)">
            <summary>
            Helper method to return the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/>.
            </summary>
            <param name="obj">UI Element</param>
            <returns>SfSkinManager theme name of type <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetBaseThemeName(System.Windows.DependencyObject)">
            <summary>
            Helper method to return the <see cref="P:Syncfusion.SfSkinManager.Theme.BaseStyleName"/>.
            </summary>
            <param name="obj">UI Element</param>
            <returns>SfSkinManager base theme name of type <see cref="T:System.String"/>.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfSkinManager.SfSkinManager.GetThemeDesign(System.Windows.DependencyObject)" -->
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ChangeVisualStyle(System.Windows.FrameworkElement,System.String,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Helper method to handle theme changed for particular control
            </summary>
            <param name="felement">Control for which theme is applied.</param>
            <param name="visualstyle">Theme name.</param>
            <param name="rootDictionary">Root theme resource dictionary.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetSkinInstance(System.String)">
            <summary>
            Method to create and return SkinHelper instance for specific visual style
            </summary>
            <param name="style">Contains VisualStyle</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ApplyWindowStyle(System.Windows.Window,System.String,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Apply the theme to the Window, ChromelessWindow and RibbonWindow.
            </summary>
            <param name="window">Window type.</param>
            <param name="style">Style that applies to the window.</param>
            <param name="rootResourceDictionary">Resource dictionary that applies the style.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.DictionaryExist(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ApplyThemeForMSControl(System.Windows.FrameworkElement,System.String,System.Windows.ResourceDictionary)">
            <summary>
            Apply the theme for MSControl
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ApplyTheme(System.Windows.DependencyObject,System.String,Syncfusion.SfSkinManager.SkinHelper,System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="style"></param>
            <param name="styleInstance"></param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.AddRootResourceDictionaty(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>
            Adds the resource dictionary to the root element by comparing with the previous merged dictionaries.
            </summary>
            <param name="rootElement">Root element.</param>
            <param name="rootResourceDictionary">Resource dictionary of the root element.</param>
            <param name="newResourceDictionary">New resource dictionary that has to be added to the root element.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.FindAncestor(System.Windows.Media.Visual,System.Type)">
            <summary>
            
            </summary>
            <param name="startingFrom"></param>
            <param name="typeAncestor"></param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.Dispose(System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ThemeResourceDictionary">
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeResourceDictionary.#ctor">
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfSkinManager.ThemeResourceDictionary.ControlsList">
            <summary>
            Stores the list of controls where theme resources are already added. 
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.Theme">
            <summary>
            Represents a class which holds theme info for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.#ctor(System.String)">
            <summary>
            Initializes new instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/>
            </summary>
            <param name="themeName">The theme name for which theme will be applied for an application.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfSkinManager.Theme.ThemeDesign" -->
        <member name="P:Syncfusion.SfSkinManager.Theme.VisualStyleName">
            <summary>
            Gets or set the theme name for which this resource dictionary created.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.BaseStyleName">
            <summary>
            Gets or set the base theme name for which this resource dictionary created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Init">
            <summary>
            Initialize method to process the provided theme name.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Dispose">
            <summary>
            Dispose and clears the resource dictionaries maintained. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Dispose(System.Boolean)">
            <summary>
            Dispose and clears the resource dictionaries maintained. 
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer</param>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.ThemeName">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:System.String"/> Theme name. The default value is <b>null</b>.
            </value>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>      
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.ThemeResourceDictionary">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeResourceDictionary"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> stores all theme related details
            </summary>
            <value>
            An instance of <see cref="T:Syncfusion.SfSkinManager.ThemeResourceDictionary"/>.
            </value>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SkinManagerExtension">
            <summary>
            A markup extension that returns <see cref="T:Syncfusion.SfSkinManager.Theme"/> for themename.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SkinManagerExtension.ThemeName">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:System.String"/> Theme name. The default value is <b>null</b>.
            </value>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>      
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.IThemeSetting">
            <summary>
            Represents an interface which holds theme customization properties for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:ClassReferenceAttribute">
            <summary>
            Represents a class for the Reference attributes
            </summary>
        </member>
        <member name="P:ClassReferenceAttribute.IsReviewed">
            <summary>
            Returns a value when set
            </summary>
            <value>
            <c>true</c> if instance is created ; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClassReferenceAttribute.ShouldInclude">
            <summary>
            Returns a value when set
            </summary>
            <value>
            <c>true</c> if instance is created ; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
