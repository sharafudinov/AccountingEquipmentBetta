<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:provider="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <provider:ResourceDictionaryProvider DictionaryName="Common" ThemeName="Office2019HighContrastWhite"/>
        <provider:ResourceDictionaryProvider DictionaryName="Brushes" ThemeName="Office2019HighContrastWhite"/>
    </ResourceDictionary.MergedDictionaries>

    <shared:ProgressConverter x:Key="ProgressConverter" />
    <shared:ClipConverter x:Key="ClipConverter" />
    <shared:RadiusConverter x:Key="CornerRadiusConverter" />

    <DataTemplate x:Key="WatermarkContentTemplate">
        <TextBlock Style="{x:Null}" Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="SyncfusionPercentTextBoxStyle" TargetType="{x:Type shared:PercentTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{StaticResource ContentForeground}" />
        <Setter Property="SelectionBrush" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForeground}" />
        <Setter Property="PositiveForeground" Value="{StaticResource SuccessForeground}" />
        <Setter Property="NegativeForeground" Value="{StaticResource ErrorForeground}" />
        <Setter Property="ZeroColor" Value="{StaticResource WarningForeground}" />
        <Setter Property="RangeAdornerBackground" Value="{StaticResource PrimaryColorLight4}" />
        <Setter Property="Background" Value="{StaticResource ContentBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource PlaceholderForeground}" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource WatermarkContentTemplate}"/>
        <Setter Property="WatermarkBackground" Value="{StaticResource ContentBackground}"/>
        <Setter Property="FontFamily" Value="{StaticResource Office2019HighContrastWhite.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource Office2019HighContrastWhite.BodyTextStyle}" />
        <Setter Property="FontWeight" Value="{StaticResource Office2019HighContrastWhite.FontWeightNormal}" />
        <Setter Property="FocusedBorderBrush" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource Office2019HighContrastWhite.ThemeBorderThicknessVariant1}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="WatermarkOpacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:PercentTextBox}">
                    <Grid x:Name="ContentHost">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="True">
                            <Border.Clip>
                                <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=CornerRadius, Converter={StaticResource CornerRadiusConverter}}" RadiusY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=CornerRadius, Converter={StaticResource CornerRadiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource ClipConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Border}}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Border}}" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid x:Name="InnerContentHost">
                                <Border
                                    x:Name="RangeAdornerBorder"
                                    Background="{TemplateBinding RangeAdornerBackground}"
                                    BorderThickness="{StaticResource Office2019HighContrastWhite.BorderThickness}"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed">
                                    <Border.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource ProgressConverter}">
                                                    <Binding Path="PercentValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="MaxValue" RelativeSource="{RelativeSource TemplatedParent}" />
													<Binding Path="MinValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                    </Border.RenderTransform>
                                </Border>

                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="Transparent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl
                                    x:Name="PART_Watermark"
                                    Grid.Row="0"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding WatermarkBackground}"
                                    Content="{TemplateBinding WatermarkText}"
                                    ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{StaticResource Office2019HighContrastWhite.BodyTextStyle}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{StaticResource Office2019HighContrastWhite.FontWeightNormal}"
                                    Foreground="{TemplateBinding WatermarkTextForeground}"
                                    IsHitTestVisible="False"
                                    IsTabStop="False"
                                    Opacity="{TemplateBinding WatermarkOpacity}"
                                    Visibility="{TemplateBinding WatermarkVisibility}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="MinHeight" Value="{StaticResource Office2019HighContrastWhite.TouchMinHeight}" />
                        </Trigger>
                        <Trigger Property="EnableRangeAdorner" Value="False">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackground}" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="{StaticResource Office2019HighContrastWhite.ThemeBorderThicknessVariant2}" />
                        </Trigger>
						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ApplyNegativeForeground" Value="True"/>
                                <Condition Property="IsNegative" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=NegativeForeground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ApplyZeroColor" Value="True"/>
                                <Condition Property="IsZero" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=ZeroColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsNegative" Value="False"/>
                                <Condition Property="IsZero" Value="False"/>
                                <Condition Property="IsNull" Value="False"/>
                                <Condition Property="EnableRangeAdorner" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=PositiveForeground}" />
                        </MultiTrigger>						
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ContentBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderAlt}" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableRangeAdorner" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RangeAdornerBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="PART_Watermark" Property="Background" Value="{StaticResource ContentBackground}" />
                            <Setter TargetName="PART_Watermark" Property="Foreground" Value="{StaticResource PlaceholderForeground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource SyncfusionPercentTextBoxStyle}" TargetType="{x:Type shared:PercentTextBox}" />

</ResourceDictionary>
